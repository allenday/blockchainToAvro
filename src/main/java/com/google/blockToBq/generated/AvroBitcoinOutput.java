/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.google.blockToBq.generated;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class AvroBitcoinOutput extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6727102147948935092L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AvroBitcoinOutput\",\"namespace\":\"com.google.blockToBq.generated\",\"fields\":[{\"name\":\"satoshis\",\"type\":[\"long\",\"null\"]},{\"name\":\"script_bytes\",\"type\":\"bytes\"},{\"name\":\"script_string\",\"type\":[\"string\",\"null\"]},{\"name\":\"script_string_error\",\"type\":[\"string\",\"null\"]},{\"name\":\"pubkey_base58\",\"type\":[\"string\",\"null\"]},{\"name\":\"pubkey_base58_error\",\"type\":[\"string\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AvroBitcoinOutput> ENCODER =
      new BinaryMessageEncoder<AvroBitcoinOutput>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AvroBitcoinOutput> DECODER =
      new BinaryMessageDecoder<AvroBitcoinOutput>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<AvroBitcoinOutput> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<AvroBitcoinOutput> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AvroBitcoinOutput>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this AvroBitcoinOutput to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a AvroBitcoinOutput from a ByteBuffer. */
  public static AvroBitcoinOutput fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.Long satoshis;
  @Deprecated public java.nio.ByteBuffer script_bytes;
  @Deprecated public java.lang.CharSequence script_string;
  @Deprecated public java.lang.CharSequence script_string_error;
  @Deprecated public java.lang.CharSequence pubkey_base58;
  @Deprecated public java.lang.CharSequence pubkey_base58_error;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AvroBitcoinOutput() {}

  /**
   * All-args constructor.
   * @param satoshis The new value for satoshis
   * @param script_bytes The new value for script_bytes
   * @param script_string The new value for script_string
   * @param script_string_error The new value for script_string_error
   * @param pubkey_base58 The new value for pubkey_base58
   * @param pubkey_base58_error The new value for pubkey_base58_error
   */
  public AvroBitcoinOutput(java.lang.Long satoshis, java.nio.ByteBuffer script_bytes, java.lang.CharSequence script_string, java.lang.CharSequence script_string_error, java.lang.CharSequence pubkey_base58, java.lang.CharSequence pubkey_base58_error) {
    this.satoshis = satoshis;
    this.script_bytes = script_bytes;
    this.script_string = script_string;
    this.script_string_error = script_string_error;
    this.pubkey_base58 = pubkey_base58;
    this.pubkey_base58_error = pubkey_base58_error;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return satoshis;
    case 1: return script_bytes;
    case 2: return script_string;
    case 3: return script_string_error;
    case 4: return pubkey_base58;
    case 5: return pubkey_base58_error;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: satoshis = (java.lang.Long)value$; break;
    case 1: script_bytes = (java.nio.ByteBuffer)value$; break;
    case 2: script_string = (java.lang.CharSequence)value$; break;
    case 3: script_string_error = (java.lang.CharSequence)value$; break;
    case 4: pubkey_base58 = (java.lang.CharSequence)value$; break;
    case 5: pubkey_base58_error = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'satoshis' field.
   * @return The value of the 'satoshis' field.
   */
  public java.lang.Long getSatoshis() {
    return satoshis;
  }

  /**
   * Sets the value of the 'satoshis' field.
   * @param value the value to set.
   */
  public void setSatoshis(java.lang.Long value) {
    this.satoshis = value;
  }

  /**
   * Gets the value of the 'script_bytes' field.
   * @return The value of the 'script_bytes' field.
   */
  public java.nio.ByteBuffer getScriptBytes() {
    return script_bytes;
  }

  /**
   * Sets the value of the 'script_bytes' field.
   * @param value the value to set.
   */
  public void setScriptBytes(java.nio.ByteBuffer value) {
    this.script_bytes = value;
  }

  /**
   * Gets the value of the 'script_string' field.
   * @return The value of the 'script_string' field.
   */
  public java.lang.CharSequence getScriptString() {
    return script_string;
  }

  /**
   * Sets the value of the 'script_string' field.
   * @param value the value to set.
   */
  public void setScriptString(java.lang.CharSequence value) {
    this.script_string = value;
  }

  /**
   * Gets the value of the 'script_string_error' field.
   * @return The value of the 'script_string_error' field.
   */
  public java.lang.CharSequence getScriptStringError() {
    return script_string_error;
  }

  /**
   * Sets the value of the 'script_string_error' field.
   * @param value the value to set.
   */
  public void setScriptStringError(java.lang.CharSequence value) {
    this.script_string_error = value;
  }

  /**
   * Gets the value of the 'pubkey_base58' field.
   * @return The value of the 'pubkey_base58' field.
   */
  public java.lang.CharSequence getPubkeyBase58() {
    return pubkey_base58;
  }

  /**
   * Sets the value of the 'pubkey_base58' field.
   * @param value the value to set.
   */
  public void setPubkeyBase58(java.lang.CharSequence value) {
    this.pubkey_base58 = value;
  }

  /**
   * Gets the value of the 'pubkey_base58_error' field.
   * @return The value of the 'pubkey_base58_error' field.
   */
  public java.lang.CharSequence getPubkeyBase58Error() {
    return pubkey_base58_error;
  }

  /**
   * Sets the value of the 'pubkey_base58_error' field.
   * @param value the value to set.
   */
  public void setPubkeyBase58Error(java.lang.CharSequence value) {
    this.pubkey_base58_error = value;
  }

  /**
   * Creates a new AvroBitcoinOutput RecordBuilder.
   * @return A new AvroBitcoinOutput RecordBuilder
   */
  public static com.google.blockToBq.generated.AvroBitcoinOutput.Builder newBuilder() {
    return new com.google.blockToBq.generated.AvroBitcoinOutput.Builder();
  }

  /**
   * Creates a new AvroBitcoinOutput RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AvroBitcoinOutput RecordBuilder
   */
  public static com.google.blockToBq.generated.AvroBitcoinOutput.Builder newBuilder(com.google.blockToBq.generated.AvroBitcoinOutput.Builder other) {
    return new com.google.blockToBq.generated.AvroBitcoinOutput.Builder(other);
  }

  /**
   * Creates a new AvroBitcoinOutput RecordBuilder by copying an existing AvroBitcoinOutput instance.
   * @param other The existing instance to copy.
   * @return A new AvroBitcoinOutput RecordBuilder
   */
  public static com.google.blockToBq.generated.AvroBitcoinOutput.Builder newBuilder(com.google.blockToBq.generated.AvroBitcoinOutput other) {
    return new com.google.blockToBq.generated.AvroBitcoinOutput.Builder(other);
  }

  /**
   * RecordBuilder for AvroBitcoinOutput instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvroBitcoinOutput>
    implements org.apache.avro.data.RecordBuilder<AvroBitcoinOutput> {

    private java.lang.Long satoshis;
    private java.nio.ByteBuffer script_bytes;
    private java.lang.CharSequence script_string;
    private java.lang.CharSequence script_string_error;
    private java.lang.CharSequence pubkey_base58;
    private java.lang.CharSequence pubkey_base58_error;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.google.blockToBq.generated.AvroBitcoinOutput.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.satoshis)) {
        this.satoshis = data().deepCopy(fields()[0].schema(), other.satoshis);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.script_bytes)) {
        this.script_bytes = data().deepCopy(fields()[1].schema(), other.script_bytes);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.script_string)) {
        this.script_string = data().deepCopy(fields()[2].schema(), other.script_string);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.script_string_error)) {
        this.script_string_error = data().deepCopy(fields()[3].schema(), other.script_string_error);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.pubkey_base58)) {
        this.pubkey_base58 = data().deepCopy(fields()[4].schema(), other.pubkey_base58);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.pubkey_base58_error)) {
        this.pubkey_base58_error = data().deepCopy(fields()[5].schema(), other.pubkey_base58_error);
        fieldSetFlags()[5] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing AvroBitcoinOutput instance
     * @param other The existing instance to copy.
     */
    private Builder(com.google.blockToBq.generated.AvroBitcoinOutput other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.satoshis)) {
        this.satoshis = data().deepCopy(fields()[0].schema(), other.satoshis);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.script_bytes)) {
        this.script_bytes = data().deepCopy(fields()[1].schema(), other.script_bytes);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.script_string)) {
        this.script_string = data().deepCopy(fields()[2].schema(), other.script_string);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.script_string_error)) {
        this.script_string_error = data().deepCopy(fields()[3].schema(), other.script_string_error);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.pubkey_base58)) {
        this.pubkey_base58 = data().deepCopy(fields()[4].schema(), other.pubkey_base58);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.pubkey_base58_error)) {
        this.pubkey_base58_error = data().deepCopy(fields()[5].schema(), other.pubkey_base58_error);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'satoshis' field.
      * @return The value.
      */
    public java.lang.Long getSatoshis() {
      return satoshis;
    }

    /**
      * Sets the value of the 'satoshis' field.
      * @param value The value of 'satoshis'.
      * @return This builder.
      */
    public com.google.blockToBq.generated.AvroBitcoinOutput.Builder setSatoshis(java.lang.Long value) {
      validate(fields()[0], value);
      this.satoshis = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'satoshis' field has been set.
      * @return True if the 'satoshis' field has been set, false otherwise.
      */
    public boolean hasSatoshis() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'satoshis' field.
      * @return This builder.
      */
    public com.google.blockToBq.generated.AvroBitcoinOutput.Builder clearSatoshis() {
      satoshis = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'script_bytes' field.
      * @return The value.
      */
    public java.nio.ByteBuffer getScriptBytes() {
      return script_bytes;
    }

    /**
      * Sets the value of the 'script_bytes' field.
      * @param value The value of 'script_bytes'.
      * @return This builder.
      */
    public com.google.blockToBq.generated.AvroBitcoinOutput.Builder setScriptBytes(java.nio.ByteBuffer value) {
      validate(fields()[1], value);
      this.script_bytes = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'script_bytes' field has been set.
      * @return True if the 'script_bytes' field has been set, false otherwise.
      */
    public boolean hasScriptBytes() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'script_bytes' field.
      * @return This builder.
      */
    public com.google.blockToBq.generated.AvroBitcoinOutput.Builder clearScriptBytes() {
      script_bytes = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'script_string' field.
      * @return The value.
      */
    public java.lang.CharSequence getScriptString() {
      return script_string;
    }

    /**
      * Sets the value of the 'script_string' field.
      * @param value The value of 'script_string'.
      * @return This builder.
      */
    public com.google.blockToBq.generated.AvroBitcoinOutput.Builder setScriptString(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.script_string = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'script_string' field has been set.
      * @return True if the 'script_string' field has been set, false otherwise.
      */
    public boolean hasScriptString() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'script_string' field.
      * @return This builder.
      */
    public com.google.blockToBq.generated.AvroBitcoinOutput.Builder clearScriptString() {
      script_string = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'script_string_error' field.
      * @return The value.
      */
    public java.lang.CharSequence getScriptStringError() {
      return script_string_error;
    }

    /**
      * Sets the value of the 'script_string_error' field.
      * @param value The value of 'script_string_error'.
      * @return This builder.
      */
    public com.google.blockToBq.generated.AvroBitcoinOutput.Builder setScriptStringError(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.script_string_error = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'script_string_error' field has been set.
      * @return True if the 'script_string_error' field has been set, false otherwise.
      */
    public boolean hasScriptStringError() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'script_string_error' field.
      * @return This builder.
      */
    public com.google.blockToBq.generated.AvroBitcoinOutput.Builder clearScriptStringError() {
      script_string_error = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'pubkey_base58' field.
      * @return The value.
      */
    public java.lang.CharSequence getPubkeyBase58() {
      return pubkey_base58;
    }

    /**
      * Sets the value of the 'pubkey_base58' field.
      * @param value The value of 'pubkey_base58'.
      * @return This builder.
      */
    public com.google.blockToBq.generated.AvroBitcoinOutput.Builder setPubkeyBase58(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.pubkey_base58 = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'pubkey_base58' field has been set.
      * @return True if the 'pubkey_base58' field has been set, false otherwise.
      */
    public boolean hasPubkeyBase58() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'pubkey_base58' field.
      * @return This builder.
      */
    public com.google.blockToBq.generated.AvroBitcoinOutput.Builder clearPubkeyBase58() {
      pubkey_base58 = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'pubkey_base58_error' field.
      * @return The value.
      */
    public java.lang.CharSequence getPubkeyBase58Error() {
      return pubkey_base58_error;
    }

    /**
      * Sets the value of the 'pubkey_base58_error' field.
      * @param value The value of 'pubkey_base58_error'.
      * @return This builder.
      */
    public com.google.blockToBq.generated.AvroBitcoinOutput.Builder setPubkeyBase58Error(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.pubkey_base58_error = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'pubkey_base58_error' field has been set.
      * @return True if the 'pubkey_base58_error' field has been set, false otherwise.
      */
    public boolean hasPubkeyBase58Error() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'pubkey_base58_error' field.
      * @return This builder.
      */
    public com.google.blockToBq.generated.AvroBitcoinOutput.Builder clearPubkeyBase58Error() {
      pubkey_base58_error = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AvroBitcoinOutput build() {
      try {
        AvroBitcoinOutput record = new AvroBitcoinOutput();
        record.satoshis = fieldSetFlags()[0] ? this.satoshis : (java.lang.Long) defaultValue(fields()[0]);
        record.script_bytes = fieldSetFlags()[1] ? this.script_bytes : (java.nio.ByteBuffer) defaultValue(fields()[1]);
        record.script_string = fieldSetFlags()[2] ? this.script_string : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.script_string_error = fieldSetFlags()[3] ? this.script_string_error : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.pubkey_base58 = fieldSetFlags()[4] ? this.pubkey_base58 : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.pubkey_base58_error = fieldSetFlags()[5] ? this.pubkey_base58_error : (java.lang.CharSequence) defaultValue(fields()[5]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AvroBitcoinOutput>
    WRITER$ = (org.apache.avro.io.DatumWriter<AvroBitcoinOutput>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AvroBitcoinOutput>
    READER$ = (org.apache.avro.io.DatumReader<AvroBitcoinOutput>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
